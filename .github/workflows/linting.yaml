---
name: Linting

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
    types: [opened, reopened]
  workflow_dispatch:

env:
  DEFAULT_PYTHON: "3.10"

jobs:
  codespell:
    name: codespell
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.0
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install Python dependencies
        run: poetry install --no-interaction
      - name: 🚀 Check code for common misspellings
        run: poetry run pre-commit run codespell --all-files

  pre-commit-hooks:
    name: pre-commit-hooks
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.0
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install Python dependencies
        run: poetry install --no-interaction
      - name: 🚀 Check that executables have shebangs
        run: poetry run pre-commit run check-executables-have-shebangs --all-files
      - name: 🚀 Check JSON files
        run: poetry run pre-commit run check-json --all-files
      - name: 🚀 Check for merge conflicts
        run: poetry run pre-commit run check-merge-conflict --all-files
      - name: 🚀 Check for broken symlinks
        run: poetry run pre-commit run check-symlinks --all-files
      - name: 🚀 Check TOML files
        run: poetry run pre-commit run check-toml --all-files
      - name: 🚀 Check XML files
        run: poetry run pre-commit run check-xml --all-files
      - name: 🚀 Check YAML files
        run: poetry run pre-commit run check-yaml --all-files
      - name: 🚀 Detect Private Keys
        run: poetry run pre-commit run detect-private-key --all-files
      - name: 🚀 Check End of Files
        run: poetry run pre-commit run end-of-file-fixer --all-files
      - name: 🚀 Trim Trailing Whitespace
        run: poetry run pre-commit run trailing-whitespace --all-files
      - name: 🚀 Go fmt
        run: poetry run pre-commit run go-fmt --all-files

  yamllint:
    name: yamllint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.0
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # v4
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install Python dependencies
        run: poetry install --no-interaction
      - name: 🚀 Run yamllint
        run: poetry run yamllint .

  golangcilint:
    name: Golang CI Lint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3.7.0
